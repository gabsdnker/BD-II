Nomes: Gabriel Carvalho e Gabrielli Danker

Avaliação AV3-b

Esta avaliação ocorrerá sobre a base de dados Sakila, portanto dedique um tempo para compreender essa base de dados.

AÇÕES A SEREM FEITAS:

A1) elaborar e fornecer comandos SQL que utilizem os recursos abaixo. Além do comando SQL, você deve fornecer também uma descrição textual explicando no que consistem os resultados retornados. Caso queira, pode também explicar o SQL.

a) consultas aninhadas
  SELECT *
  FROM actor 
  WHERE actor_id  IN (SELECT actor_id FROM inventory WHERE last_name = 'BAILEY');

b) consultas aninhadas correlacionadas
  SELECT customer_id, first_name, last_name
  FROM customer c
  WHERE EXISTS (
      SELECT 1
      FROM rental r
      WHERE r.customer_id = c.customer_id
      AND r.return_date IS NULL
  );

c) exists 
  SELECT title
  FROM film
  WHERE EXISTS (
      SELECT 1
      FROM inventory
      WHERE inventory.film_id = film.film_id
      AND inventory.store_id = 1
  );

d) unique ou distinct
  SELECT DISTINCT rating
  FROM film;

e) junções naturais
  SELECT *
  FROM film
  NATURAL JOIN inventory;
 
f) junção left ou right
  SELECT customer.first_name, customer.last_name, rental.return_date
  FROM customer
  LEFT JOIN rental ON customer.customer_id = rental.customer_id;

g) agregação
  -> Contagem de Registros 
  SELECT COUNT(*) AS total_filmes
  FROM film;

  -> Soma de Valores
  SELECT SUM(amount) AS receita_total
  FROM payment;

  -> Média de Valores
  SELECT AVG(rental_rate) AS media_preco_aluguel
  FROM rental;

  -> Valor Mínimo e Máximo
  SELECT MIN(length) AS menor_duracao, MAX(length) AS maior_duracao
  FROM film;

  -> Agregações com Agrupamento
  SELECT customer_id, SUM(amount) AS receita_total
  FROM payment
  GROUP BY customer_id;

h) group by

  -> Agrupar por uma coluna única
  SELECT category_id, COUNT(*) AS quantidade_filmes
  FROM film_category
  GROUP BY category_id;

  -> Agrupar por várias colunas
  SELECT customer_id, store_id, COUNT(*) AS quantidade_alugueis
  FROM rental
  GROUP BY customer_id, store_id;
  
  -> Usar funções de agregação com GROUP BY:
  SELECT rating, AVG(length) AS media_duracao
  FROM film
  GROUP BY rating;

A2) fornecer o comando de criação de uma visão;


A3) elaborar um programa (sugestão: em python) que percorra os registros obtidos por um dos comandos SQL's que foi criado nos itens "a" a "h".

IMPORTAÇÃO DB SAKILA

$ mysql 
mysql> source sakila-schema.sql
mysql> source sakila-data.sql
mysql> select * from actor;
mysql> exit

No laboratório do IFC, use: 
$ mysql -u root -p
(a senha é root)

